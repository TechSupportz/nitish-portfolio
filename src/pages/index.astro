---
import githubIcon from "@assets/github.svg"
import linkedInIcon from "@assets/linkedIn.svg"
import IconButton from "@components/IconButton.astro"
import ProfileCard from "@components/ProfileCard"
import Layout from "@layouts/Layout.astro"
---

<Layout title="Nitish" disableScroll>
    <div
        class="dot-matrix xs:h-1/2 absolute inset-x-0 h-[45%] max-h-[1024px] bg-[url('/dot-matrix.svg')] bg-repeat opacity-30 lg:h-4/6"
        style="mask-image: linear-gradient(to bottom,transparent,15%,white,80%,transparent)"
    >
    </div>
    <div
        class="pointer-glow fixed top-1/4 size-96 -translate-x-1/2 -translate-y-1/2 rounded-full bg-blue-300 opacity-0 mix-blend-overlay blur-3xl transition-opacity duration-500"
    >
    </div>
    <div class="relative h-dvh w-full">
        <div class="xs:h-[45%] h-[40%] lg:h-[60%]">
            <div class="z-10 flex h-full items-center">
                <div
                    class="xs:px-6 flex w-full flex-col gap-1 px-4 sm:gap-2 md:px-8 lg:px-12 xl:px-16"
                >
                    <p
                        class="text-md motion-preset-blur-right-md motion-duration-1000 xs:text-lg sm:text-xl lg:text-2xl 2xl:text-3xl"
                    >
                        Hello, my name is
                    </p>
                    <h1
                        id="name"
                        class="motion-preset-blur-right-md motion-duration-1000 motion-delay-75 xs:text-6xl mb-0.5 text-5xl sm:text-7xl lg:text-[5rem] 2xl:text-8xl"
                    >
                        Nitish
                    </h1>
                    <div
                        class="motion-preset-blur-right-md motion-duration-1000 motion-delay-100 xs:text-6xl flex flex-col flex-wrap items-baseline gap-2 text-5xl sm:text-7xl lg:flex-row xl:text-[5rem] 2xl:text-8xl"
                    >
                        <h1>I am a&nbsp;</h1>
                        <div
                            class="font-display h-[1.55ch] overflow-hidden font-bold"
                        >
                            <ul
                                id="scroll-list"
                                class="animate-infinite-scroll text-nowrap"
                                style="animation-delay: 1200ms;"
                            >
                                <li
                                    class="hidden bg-linear-to-tr from-sky-100 to-blue-500 bg-clip-text text-transparent lg:block"
                                >
                                    Software Developer
                                </li>
                                <li
                                    class="bg-linear-to-tr from-sky-100 to-blue-500 bg-clip-text text-transparent lg:hidden"
                                >
                                    Software Dev
                                </li>
                                <li
                                    class="bg-linear-to-tr from-sky-100 to-blue-500 bg-clip-text text-transparent"
                                >
                                    Tech Fanatic
                                </li>
                                <li
                                    class="bg-linear-to-tr from-sky-100 to-blue-500 bg-clip-text text-transparent"
                                >
                                    Student
                                </li>
                                <li
                                    class="hidden bg-linear-to-tr from-sky-100 to-blue-500 bg-clip-text text-transparent lg:block"
                                >
                                    Software Developer
                                </li>
                                <li
                                    class="bg-linear-to-tr from-sky-100 to-blue-500 bg-clip-text text-transparent lg:hidden"
                                >
                                    Software Dev
                                </li>
                            </ul>
                        </div>
                    </div>
                    <div class="relative mt-2 lg:static lg:-mx-16">
                        <div
                            class="motion-preset-blur-right-md motion-duration-1000 motion-delay-150 flex gap-4 lg:mx-16 2xl:gap-6"
                        >
                            <IconButton
                                href="https://github.tnitish.com/"
                                openInNewTab
                            >
                                <img
                                    src={githubIcon.src}
                                    alt="GitHub Icon"
                                    loading={"eager"}
                                    width={64}
                                    height={64}
                                />
                            </IconButton>
                            <IconButton
                                href="https://linkedin.tnitish.com/"
                                openInNewTab
                            >
                                <img
                                    src={linkedInIcon.src}
                                    alt="LinkedIn Icon"
                                    loading={"eager"}
                                    width={64}
                                    height={64}
                                />
                            </IconButton>
                        </div>
                        <div
                            class="absolute inset-x-0 m-auto mt-6 w-full pb-8 sm:w-10/12 md:mt-10 md:w-4/5 lg:mt-12 lg:min-h-72 lg:w-full lg:px-8 2xl:mt-16"
                        >
                            <div
                                class="flex w-full flex-col gap-[3vh] lg:h-screen lg:max-h-72 lg:flex-row lg:justify-center lg:gap-6 xl:gap-8"
                            >
                                <ProfileCard
                                    client:load
                                    title="Software Developer 👨🏾‍💻"
                                    body="Full-stack web & mobile dev who loves solving problems and building cool stuff. Always down to learn, experiment, and mess around with new tech. 🚀"
                                    initialActive
                                />
                                <ProfileCard
                                    client:load
                                    title="Tech Fanatic 📱"
                                    body="Always keeping up with the latest in tech — whether it's coding, new gadgets, or the wild innovations in F1. 🏎️"
                                    offset
                                />
                                <ProfileCard
                                    client:load
                                    title="Student 🎓"
                                    body="Temasek Poly graduate (2024 IT Course Gold Medallist 🏅, Lee Kuan Yew Award winner 🏆).\nProspective NUS Computer Science student. 💻"
                                />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</Layout>

<script>
    import { $scrollListItemVisibility } from "@store/uiStore"
    import type { TScrollListItemVisibility } from "@src/types/ScrollListType"

    const scrollList = document.getElementById("scroll-list")

    const dotMatrix = document.querySelector<HTMLElement>(".dot-matrix")
    const pointerGlow = document.querySelector<HTMLElement>(".pointer-glow")
    const name = document.getElementById("name")

    if (scrollList) {
        const TECH_FANATIC_THRESHOLD_START = 0
        const TECH_FANATIC_THRESHOLD_END = -25 // Becomes visible below 0%, fully visible until -25%
        const STUDENT_THRESHOLD_START = -25
        const STUDENT_THRESHOLD_END = -50 // Becomes visible below -25%, fully visible until -50%
        const SOFTWARE_DEV_THRESHOLD = -55 // Visible below -50% (or -55% for buffer) OR >= 0%

        let lastCheckTime = 0
        const checkInterval = 500

        const checkScrollPosition = (timestamp: number) => {
            if (!scrollList) {
                requestAnimationFrame(checkScrollPosition)
                return
            }

            // Only run the check logic at the desired interval
            if (timestamp - lastCheckTime >= checkInterval) {
                lastCheckTime = timestamp

                const style = window.getComputedStyle(scrollList)
                // Ensure transform style is valid before creating DOMMatrix
                if (!style.transform || style.transform === "none") {
                    requestAnimationFrame(checkScrollPosition) // Schedule next check
                    return
                }

                const matrix = new DOMMatrixReadOnly(style.transform)

                const clientHeight = scrollList.clientHeight
                // Avoid division by zero if clientHeight is 0
                if (clientHeight === 0) {
                    requestAnimationFrame(checkScrollPosition) // Schedule next check
                    return
                }

                // Calculate translateY as a percentage of the element's height
                const translateY = (matrix.m42 / clientHeight) * 100

                let nextScrollListItemVisibility: TScrollListItemVisibility = {
                    softwareDeveloper: true,
                    techFanatic: false,
                    student: false,
                }

                // Determine visibility based on translateY percentage
                if (
                    translateY < TECH_FANATIC_THRESHOLD_START &&
                    translateY >= TECH_FANATIC_THRESHOLD_END
                ) {
                    // "Tech Fanatic" is visible
                    nextScrollListItemVisibility = {
                        softwareDeveloper: false,
                        techFanatic: true,
                        student: false,
                    }
                } else if (
                    translateY < STUDENT_THRESHOLD_START &&
                    translateY >= STUDENT_THRESHOLD_END
                ) {
                    // "Student" is visible
                    nextScrollListItemVisibility = {
                        softwareDeveloper: false,
                        techFanatic: false,
                        student: true,
                    }
                } else if (
                    translateY < SOFTWARE_DEV_THRESHOLD ||
                    translateY >= TECH_FANATIC_THRESHOLD_START
                ) {
                    // "Software Developer" is visible (includes initial state and wrap-around)
                    nextScrollListItemVisibility = {
                        softwareDeveloper: true,
                        techFanatic: false,
                        student: false,
                    }
                }

                // Update the store with the new visibility state
                $scrollListItemVisibility.set(nextScrollListItemVisibility)
            }

            requestAnimationFrame(checkScrollPosition) // Schedule the next frame check
        }

        requestAnimationFrame(checkScrollPosition) // Start the loop
    }

    if (dotMatrix && pointerGlow && name) {
        document.body.onpointermove = e => {
            if (
                e.clientY < dotMatrix.clientHeight - 64 &&
                e.clientY > 80 &&
                e.clientX > 10 &&
                e.clientX < window.innerWidth - 10
            ) {
                pointerGlow.animate(
                    {
                        top: `${e.clientY}px`,
                        left: `${e.clientX}px`,
                    },
                    {
                        duration: 500,
                        easing: "ease-out",
                        fill: "forwards",
                    },
                )
                pointerGlow.style.opacity = "1"
            } else {
                pointerGlow.style.opacity = "0"
            }
        }
    }
</script>
